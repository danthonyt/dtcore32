
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202507090559]     |
 |  Copyright (C) 2012 - 2025 YosysHQ GmbH                                    |
 |  For support, please contact support@yosyshq.com                           |
 \----------------------------------------------------------------------------/
 Yosys 0.55 (git sha1 60f126cd0, clang++ 18.1.8 -fPIC -O3)

-- Executing script file `../model/design.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun25_SW_Release, released at Mon Jun 30 19:10:15 2025.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cpu_wb_dmem_master.sv'

2. Executing HIERARCHY pass (managing design hierarchy).
Statically elaborating the Verific parse tree.
Elaborating all modules in library 'work'
VERIFIC-INFO [VERI-1018] cpu_wb_dmem_master.sv:2: compiling module 'cpu_wb_dmem_master'
Running rewriter 'initial-assertions'.
VERIFIC-INFO [YOSYSHQ-0002] cpu_wb_dmem_master.sv:79: Executing rewriter 'initial-assertions' in file 'cpu_wb_dmem_master.sv' line 79
Clearing rewriter list.
VERIFIC-INFO [VERI-1018] cpu_wb_dmem_master.sv:2: compiling module 'cpu_wb_dmem_master'
Importing module cpu_wb_dmem_master.

2.1. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master

2.2. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master
Removed 0 unused modules.
Module cpu_wb_dmem_master directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing PREP pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master

3.1.2. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master
Removed 0 unused modules.
Module cpu_wb_dmem_master directly or indirectly contains formal properties -> setting "keep" attribute.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

3.2.4. Executing PROC_INIT pass (extract init attributes).

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

3.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

3.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

3.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.
<suppressed ~32 debug messages>

3.3. Executing FUTURE pass.

3.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.

3.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_wb_dmem_master..
Removed 0 unused cells and 82 unused wires.
<suppressed ~13 debug messages>

3.6. Executing CHECK pass (checking for obvious problems).
Checking module cpu_wb_dmem_master...
Found and reported 0 problems.

3.7. Executing OPT pass (performing simple optimizations).

3.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.
<suppressed ~12 debug messages>

3.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_wb_dmem_master'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_wb_dmem_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_wb_dmem_master.
Performed a total of 0 changes.

3.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_wb_dmem_master'.
Removed a total of 0 cells.

3.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_wb_dmem_master..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

3.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.

3.7.8. Rerunning OPT passes. (Maybe there is more to do..)

3.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_wb_dmem_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_wb_dmem_master.
Performed a total of 0 changes.

3.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_wb_dmem_master'.
Removed a total of 0 cells.

3.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_wb_dmem_master..

3.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.

3.7.14. Finished OPT passes. (There is nothing left to do.)

3.8. Executing WREDUCE pass (reducing word size of cells).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_wb_dmem_master..

3.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_wb_dmem_master.

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_wb_dmem_master'.
Removed a total of 0 cells.

3.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_wb_dmem_master..

3.11.4. Finished fast OPT passes.

3.12. Printing statistics.

=== cpu_wb_dmem_master ===

   Number of wires:                 76
   Number of wire bits:            528
   Number of public wires:          23
   Number of public wire bits:     280
   Number of ports:                 18
   Number of port bits:            210
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 65
     $adff                           9
     $and                            4
     $assert                         3
     $assume                         2
     $dff                           10
     $eq                             4
     $initstate                      1
     $mux                           21
     $not                           10
     $or                             1

3.13. Executing CHECK pass (checking for obvious problems).
Checking module cpu_wb_dmem_master...
Found and reported 0 problems.

4. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `cpu_wb_dmem_master'. Setting top module to cpu_wb_dmem_master.

4.1. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master

4.2. Analyzing design hierarchy..
Top module:  \cpu_wb_dmem_master
Removed 0 unused modules.
Module cpu_wb_dmem_master directly or indirectly contains formal properties -> setting "keep" attribute.

5. Executing jny backend.

6. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: 372cedcbf1, CPU: user 0.03s system 0.01s, MEM: 35.71 MB peak
Yosys 0.55 (git sha1 60f126cd0, clang++ 18.1.8 -fPIC -O3)
Time spent: 23% 3x hierarchy (0 sec), 22% 5x opt_clean (0 sec), ...
