
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202507090559]     |
 |  Copyright (C) 2012 - 2025 YosysHQ GmbH                                    |
 |  For support, please contact support@yosyshq.com                           |
 \----------------------------------------------------------------------------/
 Yosys 0.55 (git sha1 60f126cd0, clang++ 18.1.8 -fPIC -O3)

-- Executing script file `../model/design.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun25_SW_Release, released at Mon Jun 30 19:10:15 2025.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_interconnect.sv'

2. Executing HIERARCHY pass (managing design hierarchy).
Statically elaborating the Verific parse tree.
Elaborating all modules in library 'work'
VERIFIC-INFO [VERI-1018] wb_interconnect.sv:1: compiling module 'wb_interconnect'
Running rewriter 'initial-assertions'.
Clearing rewriter list.
VERIFIC-INFO [VERI-1018] wb_interconnect.sv:1: compiling module 'wb_interconnect'
VERIFIC-WARNING [VDB-1002] wb_interconnect.sv:90: net 'clk' does not have a driver
Importing module wb_interconnect.

2.1. Analyzing design hierarchy..
Top module:  \wb_interconnect

2.2. Analyzing design hierarchy..
Top module:  \wb_interconnect
Removed 0 unused modules.
Module wb_interconnect directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing PREP pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \wb_interconnect

3.1.2. Analyzing design hierarchy..
Top module:  \wb_interconnect
Removed 0 unused modules.
Module wb_interconnect directly or indirectly contains formal properties -> setting "keep" attribute.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

3.2.4. Executing PROC_INIT pass (extract init attributes).

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

3.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

3.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

3.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_interconnect.
<suppressed ~14 debug messages>

3.3. Executing FUTURE pass.

3.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_interconnect.

3.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 45 unused wires.
<suppressed ~17 debug messages>

3.6. Executing CHECK pass (checking for obvious problems).
Checking module wb_interconnect...
Warning: Wire wb_interconnect.\clk is used but has no driver.
Found and reported 1 problems.

3.7. Executing OPT pass (performing simple optimizations).

3.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_interconnect.

3.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

3.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

3.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

3.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect..

3.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_interconnect.

3.7.8. Finished OPT passes. (There is nothing left to do.)

3.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 11 bits (of 16) from port B of cell wb_interconnect.$verific$equal_3$wb_interconnect.sv:45$59 ($eq).
Removed top 7 bits (of 16) from port B of cell wb_interconnect.$verific$equal_5$wb_interconnect.sv:46$61 ($eq).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect..

3.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_interconnect.

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

3.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect..

3.11.4. Finished fast OPT passes.

3.12. Printing statistics.

=== wb_interconnect ===

   Number of wires:                 73
   Number of wire bits:            327
   Number of public wires:          26
   Number of public wire bits:     249
   Number of ports:                 23
   Number of port bits:            246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     $and                           12
     $assert                         2
     $dff                            4
     $eq                             6
     $mux                           12
     $not                           14
     $xor                            8

3.13. Executing CHECK pass (checking for obvious problems).
Checking module wb_interconnect...
Warning: Wire wb_interconnect.\clk is used but has no driver.
Found and reported 1 problems.

4. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `wb_interconnect'. Setting top module to wb_interconnect.

4.1. Analyzing design hierarchy..
Top module:  \wb_interconnect

4.2. Analyzing design hierarchy..
Top module:  \wb_interconnect
Removed 0 unused modules.
Module wb_interconnect directly or indirectly contains formal properties -> setting "keep" attribute.

5. Executing jny backend.

6. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 2 unique messages, 3 total
End of script. Logfile hash: a91a21060d, CPU: user 0.03s system 0.01s, MEM: 35.41 MB peak
Yosys 0.55 (git sha1 60f126cd0, clang++ 18.1.8 -fPIC -O3)
Time spent: 26% 3x hierarchy (0 sec), 19% 4x opt_clean (0 sec), ...
